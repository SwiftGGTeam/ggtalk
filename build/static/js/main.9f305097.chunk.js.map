{"version":3,"sources":["components/MediaElement.js","components/NavBar.js","components/BtnBar.js","rss.js","components/Main.js","components/Episode.js","components/About.js","components/Android.js","App.js","serviceWorker.js","index.js"],"names":["MediaElement","props","this","mediaBody","source","mediaHtml","concat","id","width","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","dangerouslySetInnerHTML","__html","MediaElementPlayer","global","player","console","log","remove","Component","NavBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","className","reactstrap_es","color","light","expand","href","onClick","navbar","target","BtnBar","rel","outline","rss","episodes","require","xml2js","compact","channel","item","Array","isArray","Main","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","_this2","fluid","src_components_NavBar","src_components_BtnBar","xs","sm","md","lg","map","episode","i","key","Link","to","title","_text","pubDate","split","reverse","Autolinker","Episode","document","match","params","guid","controls","link","description","replace","About","Android","App","BrowserRouter","Switch","Route","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f305097.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'mediaelement';\n\n// Import stylesheet and shims\nimport 'mediaelement/build/mediaelementplayer.min.css';\nimport 'mediaelement/build/mediaelement-flash-video.swf';\n\nexport default class MediaElement extends Component {\n  render() {\n    const props = this.props\n\n    const\n      mediaBody = props.source,\n      mediaHtml = `<audio id=\"${props.id}\" width=\"${props.width}\" controls src=\"${mediaBody}\" />` ;\n\n    return (<div dangerouslySetInnerHTML={{__html: mediaHtml}}></div>);\n\n  }\n\n  componentDidMount() {\n\n    const {MediaElementPlayer} = global;\n    if (!MediaElementPlayer) {\n      return;\n    }\n\n\n    this.player = new MediaElementPlayer(this.props.id)\n    console.log(this.player)\n  }\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.remove();\n      this.player = null\n    }\n  }\n}","import React, { Component } from 'react';\nimport './NavBar.css';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from 'reactstrap';\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <div className='nav-bar'>\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand href=\"/\">ggtalk</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"/\">节目列表</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink target='_blank' href=\"https://swift.gg\">Swift GG 网站</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink target='_blank' href=\"https://www.weibo.com/swiftguide\">Swift GG 微博</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink target='_blank' href=\"https://github.com/SwiftGGTeam/ggtalk\">GitHub</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/android\">安卓说明</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/about\">关于</NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default NavBar\n","import React, { Component } from 'react';\nimport {\nRow, Col, Button\n} from 'reactstrap';\nimport './BtnBar.css'\n\nclass BtnBar extends Component {\n  render() {\n    return (\n      <Row>\n        <Col className='btns'>\n          <a target='_blank' rel=\"noopener noreferrer\" href='https://talk.swift.gg/static/rss.xml'>\n            <Button outline color=\"secondary\">RSS</Button>\n          </a>\n          <a target='_blank' rel=\"noopener noreferrer\" href='https://itunes.apple.com/cn/podcast/ggtalk/id1440443653'>\n            <Button outline color=\"secondary\">苹果 Podcasts</Button>\n          </a>\n          <a target='_blank' rel=\"noopener noreferrer\" href='/android'>\n            <Button outline color=\"secondary\">安卓说明</Button>\n          </a>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default BtnBar\n","export default `<rss xmlns:itunes=\"http://www.itunes.com/dtds/podcast-1.0.dtd\" version=\"2.0\" xmlns:atom=\"http://www.w3.org/2005/Atom\">\n    <channel>\n        <title>ggtalk</title>\n        <link>https://swift.gg</link>\n        <image>\n            <url>https://talk.swift.gg/static/logo.jpg</url>\n            <title>ggtalk</title>\n            <link>https://swift.gg</link>\n        </image>\n        <description>\n接地气、有价值的闲聊节目。一帮程序员，在无尽的接需求写代码改 bug 加班上线循环中开辟出来的一块空地，想想过去，聊聊现在，偶尔也展望一下未来。\n\n头发越来越少，经验越来越多；颈椎开始僵硬，头脑依然灵活。代码写多了就想尝试点新东西，聊技术，聊工作，聊生活。挤地铁？又堵车？随便点一期吧，听个乐呵。\n\n我们的网站：https://swift.gg，我们的微博@SwiftGG翻译组，我的微博@梁杰_numbbbbb，我的邮箱：numbbbbb@swift.gg。\n        </description>\n        <language>zh-cn</language>\n        <copyright>Swift.GG copyright 2018</copyright>\n        <atom:link href=\"https://talk.swift.gg/rss.xml\" rel=\"self\" type=\"application/rss+xml\" />\n        <lastBuildDate>Tue, 04 Dec 2018 08:00:00 CDT</lastBuildDate>\n        <itunes:author>梁杰</itunes:author>\n        <itunes:summary>\n接地气、有价值的闲聊节目。一帮程序员，在无尽的接需求写代码改 bug 加班上线循环中开辟出来的一块空地，想想过去，聊聊现在，偶尔也展望一下未来。\n\n头发越来越少，经验越来越多；颈椎开始僵硬，头脑依然灵活。代码写多了就想尝试点新东西，聊技术，聊工作，聊生活。挤地铁？又堵车？随便点一期吧，听个乐呵。\n\n我们的网站：https://swift.gg，我们的微博@SwiftGG翻译组，我的微博@梁杰_numbbbbb，我的邮箱：numbbbbb@swift.gg。\n        </itunes:summary>\n        <itunes:subtitle>程序员的闲聊</itunes:subtitle>\n        <itunes:owner>\n            <itunes:name>梁杰</itunes:name>\n            <itunes:email>numbbbbb@swift.gg</itunes:email>\n        </itunes:owner>\n        <itunes:explicit>No</itunes:explicit>\n        <itunes:keywords>\n            程序员,开发,开发者,swift,swiftgg,翻译组,技术\n        </itunes:keywords>\n        <itunes:image href=\"https://talk.swift.gg/static/logo.jpg\"/>\n        <itunes:category text=\"Technology\"></itunes:category>\n        <itunes:category text=\"Education\"></itunes:category>\n        <itunes:category text=\"Games &amp; Hobbies\"></itunes:category>\n        <pubDate>Sun, 28 Oct 2018 22:00:00 CDT</pubDate>\n        <item>\n            <title>聊聊程序员的升职加薪（上）</title>\n            <link>https://talk.swift.gg</link>\n            <pubDate>Sun, 28 Oct 2018 22:00:00 CDT</pubDate>\n            <description>\n第一期电台节目，我们选了一个比较有话题性，或者说比较有噱头的主题：程序员的升职加薪。\n\n本期请到的嘉宾是 SwiftGG 翻译组的星星和 mm，他们都在最近经历了和升职加薪相关的事，聊了不少自己的感想。想知道我们都聊了什么？戴上耳机，点击播放。\n\n参考链接：\n• 「在 BAT 工作三年的普通员工拿多少工资？」知乎回答：https://www.zhihu.com/question/38443121/answer/294923781\n• mm 的微博：@画渣程序猿mmoaay（https://www.weibo.com/smmoaay）\n• 星星的微博：@星夜暮晨（https://www.weibo.com/moonisky）\n• 梁杰的微博：@梁杰_numbbbbb（https://www.weibo.com/numbbbbb）\n            </description>\n            <enclosure url=\"https://talkcdn.swift.gg/audio/1.mp3\" length=\"109921514\" type=\"audio/mpeg\" />\n            <guid>https://talkcdn.swift.gg/audio/1.mp3</guid>\n            <itunes:duration>57:15</itunes:duration>\n            <itunes:summary>\n第一期电台节目，我们选了一个比较有话题性，或者说比较有噱头的主题：程序员的升职加薪。\n\n本期请到的嘉宾是 SwiftGG 翻译组的星星和 mm，他们都在最近经历了和升职加薪相关的事，聊了不少自己的感想。想知道我们都聊了什么？戴上耳机，点击播放。\n\n参考链接：\n• 「在 BAT 工作三年的普通员工拿多少工资？」知乎回答：https://www.zhihu.com/question/38443121/answer/294923781\n• mm 的微博：@画渣程序猿mmoaay（https://www.weibo.com/smmoaay）\n• 星星的微博：@星夜暮晨（https://www.weibo.com/moonisky）\n• 梁杰的微博：@梁杰_numbbbbb（https://www.weibo.com/numbbbbb）\n            </itunes:summary>\n            <itunes:image href=\"https://talk.swift.gg/static/logo.jpg\"/>\n            <itunes:keywords>程序员,开发,开发者,swift,swiftgg,翻译组,技术,升职,加薪</itunes:keywords>\n          <itunes:explicit>no</itunes:explicit>\n        </item>\n        <item>\n            <title>我都花时间搭博客了，为什么还要花时间写？</title>\n            <link>https://talk.swift.gg</link>\n            <pubDate>Tue, 06 Nov 2018 23:00:00 CDT</pubDate>\n            <description>\n每个女孩都有一个公主梦，每个程序员也都有一个博客梦（什么烂比喻！）。用 CSS 把自己的网站布局得漂漂亮亮，加上 Google Analytics 代码，等待着访问量暴涨的那一天。\n\n本期请到的嘉宾是 iOS 界的“灯塔”（为什么叫灯塔？请听本台独家揭秘），刚刚毕业一年的 Draveness。Draveness 的个人博客年 PV 已经超过百万，发布了大量高质量的技术文章。\n\nDraveness 的博客经历了什么发展过程？如何坚持写博客？如何制作美观的博客插图？本期节目，和 Draveness 一起聊聊写博客这点事儿。\n\n参考链接：\n• Draveness 的博客：https://draveness.me/\n• Draveness 的微博：@Draveness（https://www.weibo.com/u/5123574960）\n• Draveness 的 GitHub：https://github.com/Draveness\n• 梁杰的微博：@梁杰_numbbbbb（https://www.weibo.com/numbbbbb）\n            </description>\n            <enclosure url=\"https://talkcdn.swift.gg/audio/2.mp3\" length=\"91284713\" type=\"audio/mpeg\" />\n            <guid>https://talkcdn.swift.gg/audio/2.mp3</guid>\n            <itunes:duration>47:33</itunes:duration>\n            <itunes:summary>\n每个女孩都有一个公主梦，每个程序员也都有一个博客梦（什么烂比喻！）。用 CSS 把自己的网站布局得漂漂亮亮，加上 Google Analytics 代码，等待着访问量暴涨的那一天。\n\n本期请到的嘉宾是 iOS 界的“灯塔”（为什么叫灯塔？请听本台独家揭秘），刚刚毕业一年的 Draveness。Draveness 的个人博客年 PV 已经超过百万，发布了大量高质量的技术文章。\n\nDraveness 的博客经历了什么发展过程？如何坚持写博客？如何制作美观的博客插图？本期节目，和 Draveness 一起聊聊写博客这点事儿。\n\n参考链接：\n• Draveness 的博客：https://draveness.me/\n• Draveness 的微博：@Draveness（https://www.weibo.com/u/5123574960）\n• Draveness 的 GitHub：https://github.com/Draveness\n• 梁杰的微博：@梁杰_numbbbbb（https://www.weibo.com/numbbbbb）\n            </itunes:summary>\n            <itunes:image href=\"https://talk.swift.gg/static/logo.jpg\"/>\n            <itunes:keywords>程序员,开发,开发者,swiftgg,搭建博客,写博客,Draveness,灯塔</itunes:keywords>\n          <itunes:explicit>no</itunes:explicit>\n        </item>\n        <item>\n            <title>和裕波聊聊如何办一场技术大会（上）</title>\n            <link>https://talk.swift.gg</link>\n            <pubDate>Tue, 13 Nov 2018 11:00:00 CDT</pubDate>\n            <description>\n关于技术大会的讨论已经够多了，有人喜欢，有人讨厌。不过这都不是本期重点，这次我们想换个角度，走进后台，看看到底如何办一场技术大会。\n\n本期的嘉宾是周裕波，w3ctech 的发起人，在过去的 9 年中组织了多场技术大会和技术分享，其中绝大多数都是非营利活动。\n\n我自己也是一个大会组织者，组织过三届 Swift 大会，目前来看反响还都不错。我和裕波是通过大会认识，我开始组织大会也是受裕波影响，可以说这期节目也完成了我的一个愿望，和我的大会启蒙导师聊聊办大会的酸甜苦辣。\n\n对大会的幕后故事感兴趣？想自己尝试组织活动？别犹豫，点击播放。\n\n参考链接：\n• w3ctech：https://w3ctech.com/\n• 裕波的微博：@裕波（https://weibo.com/itchina100）\n• 11 月 24 日，第二届 Vue.js 开发者大会：https://vue.w3ctech.com/?home\n• 第一届 @Swift 大会资源：https://github.com/atConf/atswift-2016-resources\n• @Swift 大会微博：@Swift开发者大会：https://weibo.com/atswift\n• 梁杰的微博：@梁杰_numbbbbb（https://www.weibo.com/numbbbbb）\n            </description>\n            <enclosure url=\"https://talkcdn.swift.gg/audio/3.mp3\" length=\"123336332\" type=\"audio/mpeg\" />\n            <guid>https://talkcdn.swift.gg/audio/3.mp3</guid>\n            <itunes:duration>01:04:14</itunes:duration>\n            <itunes:summary>\n关于技术大会的讨论已经够多了，有人喜欢，有人讨厌。不过这都不是本期重点，这次我们想换个角度，走进后台，看看到底如何办一场技术大会。\n\n本期的嘉宾是周裕波，w3ctech 的发起人，在过去的 9 年中组织了多场技术大会和技术分享，其中绝大多数都是非营利活动。\n\n我自己也是一个大会组织者，组织过三届 Swift 大会，目前来看反响还都不错。我和裕波是通过大会认识，我开始组织大会也是受裕波影响，可以说这期节目也完成了我的一个愿望，和我的大会启蒙导师聊聊办大会的酸甜苦辣。\n\n对大会的幕后故事感兴趣？想自己尝试组织活动？别犹豫，点击播放。\n\n参考链接：\n• w3ctech：https://w3ctech.com/\n• 裕波的微博：@裕波（https://weibo.com/itchina100）\n• 11 月 24 日，第二届 Vue.js 开发者大会：https://vue.w3ctech.com/?home\n• 第一届 @Swift 大会资源：https://github.com/atConf/atswift-2016-resources\n• @Swift 大会微博：@Swift开发者大会：https://weibo.com/atswift\n• 梁杰的微博：@梁杰_numbbbbb（https://www.weibo.com/numbbbbb）\n            </itunes:summary>\n            <itunes:image href=\"https://talk.swift.gg/static/logo.jpg\"/>\n            <itunes:keywords>程序员,开发,开发者,swiftgg,技术大会,裕波,swift大会</itunes:keywords>\n          <itunes:explicit>no</itunes:explicit>\n        </item>\n        <item>\n            <title>和裕波聊聊如何办一场技术大会（下）</title>\n            <link>https://talk.swift.gg</link>\n            <pubDate>Wed, 14 Nov 2018 15:00:00 CDT</pubDate>\n            <description>\n关于技术大会的讨论已经够多了，有人喜欢，有人讨厌。不过这都不是本期重点，这次我们想换个角度，走进后台，看看到底如何办一场技术大会。\n\n本期的嘉宾是周裕波，w3ctech 的发起人，在过去的 9 年中组织了多场技术大会和技术分享，其中绝大多数都是非营利活动。\n\n我自己也是一个大会组织者，组织过三届 Swift 大会，目前来看反响还都不错。我和裕波是通过大会认识，我开始组织大会也是受裕波影响，可以说这期节目也完成了我的一个愿望，和我的大会启蒙导师聊聊办大会的酸甜苦辣。\n\n对大会的幕后故事感兴趣？想自己尝试组织活动？别犹豫，点击播放。\n\n参考链接：\n• w3ctech：https://w3ctech.com/\n• 裕波的微博：@裕波（https://weibo.com/itchina100）\n• 11 月 24 日，第二届 Vue.js 开发者大会：https://vue.w3ctech.com/?home\n• 第一届 @Swift 大会资源：https://github.com/atConf/atswift-2016-resources\n• @Swift 大会微博：@Swift开发者大会：https://weibo.com/atswift\n• 梁杰的微博：@梁杰_numbbbbb（https://www.weibo.com/numbbbbb）\n            </description>\n            <enclosure url=\"https://talkcdn.swift.gg/audio/4.mp3\" length=\"71436667\" type=\"audio/mpeg\" />\n            <guid>https://talkcdn.swift.gg/audio/4.mp3</guid>\n            <itunes:duration>37:12</itunes:duration>\n            <itunes:summary>\n关于技术大会的讨论已经够多了，有人喜欢，有人讨厌。不过这都不是本期重点，这次我们想换个角度，走进后台，看看到底如何办一场技术大会。\n\n本期的嘉宾是周裕波，w3ctech 的发起人，在过去的 9 年中组织了多场技术大会和技术分享，其中绝大多数都是非营利活动。\n\n我自己也是一个大会组织者，组织过三届 Swift 大会，目前来看反响还都不错。我和裕波是通过大会认识，我开始组织大会也是受裕波影响，可以说这期节目也完成了我的一个愿望，和我的大会启蒙导师聊聊办大会的酸甜苦辣。\n\n对大会的幕后故事感兴趣？想自己尝试组织活动？别犹豫，点击播放。\n\n参考链接：\n• w3ctech：https://w3ctech.com/\n• 裕波的微博：@裕波（https://weibo.com/itchina100）\n• 11 月 24 日，第二届 Vue.js 开发者大会：https://vue.w3ctech.com/?home\n• 第一届 @Swift 大会资源：https://github.com/atConf/atswift-2016-resources\n• @Swift 大会微博：@Swift开发者大会：https://weibo.com/atswift\n• 梁杰的微博：@梁杰_numbbbbb（https://www.weibo.com/numbbbbb）\n            </itunes:summary>\n            <itunes:image href=\"https://talk.swift.gg/static/logo.jpg\"/>\n            <itunes:keywords>程序员,开发,开发者,swiftgg,技术大会,裕波,swift大会</itunes:keywords>\n          <itunes:explicit>no</itunes:explicit>\n        </item>\n        <item>\n            <title>聊聊程序员的升职加薪（下）</title>\n            <link>https://talk.swift.gg</link>\n            <pubDate>Tue, 20 Nov 2018 08:00:00 CDT</pubDate>\n            <description>\n是你期待已久的（下）期！\n\n作为 ggtalk 节目的第一个主题，只聊一期当然是不够的。在（上）中，翻译组的星星和 mm 分享了自己的转岗和升职经验。作为亲身经历的人，聊了很多有趣有价值的内容。\n\n这一期中，我们请到了翻译组两位叔辈的大佬，莲叔和羊叔。作为技术团队的 leader，从另一个角度聊聊他们眼中的升职加薪，结合上一期，形成一个完整全面的认识。\n\n说的够多了，听！（海哭的声音……）\n\n参考链接：\n• 莲叔的微博：@aaaron7_ （https://weibo.com/aaaron7）\n• 羊叔的微博：@shanksyang（https://weibo.com/shanksyang0）\n• 梁杰的微博：@梁杰_numbbbbb（https://www.weibo.com/numbbbbb）\n            </description>\n            <enclosure url=\"https://talkcdn.swift.gg/audio/5.mp3\" length=\"45288304\" type=\"audio/mpeg\" />\n            <guid>https://talkcdn.swift.gg/audio/5.mp3</guid>\n            <itunes:duration>47:10</itunes:duration>\n            <itunes:summary>\n是你期待已久的（下）期！\n\n作为 ggtalk 节目的第一个主题，只聊一期当然是不够的。在（上）中，翻译组的星星和 mm 分享了自己的转岗和升职经验。作为亲身经历的人，聊了很多有趣有价值的内容。\n\n这一期中，我们请到了翻译组两位叔辈的大佬，莲叔和羊叔。作为技术团队的 leader，从另一个角度聊聊他们眼中的升职加薪，结合上一期，形成一个完整全面的认识。\n\n说的够多了，听！（海哭的声音……）\n\n参考链接：\n• 莲叔的微博：@aaaron7_ （https://weibo.com/aaaron7）\n• 羊叔的微博：@shanksyang（https://weibo.com/shanksyang0）\n• 梁杰的微博：@梁杰_numbbbbb（https://www.weibo.com/numbbbbb）\n            </itunes:summary>\n            <itunes:image href=\"https://talk.swift.gg/static/logo.jpg\"/>\n            <itunes:keywords>程序员,开发,开发者,swift,swiftgg,翻译组,技术,升职,加薪</itunes:keywords>\n          <itunes:explicit>no</itunes:explicit>\n        </item>\n        <item>\n            <title>聊聊 Swift 这四年（上）</title>\n            <link>https://talk.swift.gg</link>\n            <pubDate>Tue, 27 Nov 2018 09:00:00 CDT</pubDate>\n            <description>\n从 2014 年到现在，Swift 发布已经超过四年。从 Swift 文档翻译开始，我们翻译组也一路参与 Swift 的发展过程，做了很多有意思的事。Swift 5 预计会在 2019 发布，届时 ABI 将会稳定，开发者一直盼望的黎明即将到来。黎明前夕，我们想回忆一下过去，说说这四年发生过什么。\n\n这期节目我们请到了老朋友莲叔和星星，还在青总的帮助下请到了 Enjoy 团队的王雷，四个人站在四个不同的角度，聊聊我们的回忆和思考。（本期还有一段彩蛋，来自喵神的 Swift 开源解读！）\n\n如果你一直在关注 Swift，可以和我们一起来回忆过去；如果你是新入行或者新转行的 iOS 开发者，那本期节目可以让你更加深入的了解 Swift。总之，听就对了。\n\n哦对了，如果你觉得这期节目有价值，别忘了分享给你的朋友。\n\n参考链接：\n• 垃圾桶里的 OC 教程：https://img.25pp.com/uploadfile/news/2014/0604/20140604031716756_380x480.jpg\n• 《The Swift Programming Language》中文版项目地址：https://github.com/SwiftGGTeam/the-swift-programming-language-in-chinese\n• Swift 中文文档正式发布的那条微博：https://weibo.com/5174822990/B8CqZ7ox0?refer_flag=1001030103_\n• 苹果官方 Swift 首页：https://swift.org/\n• Enjoy App：https://itunes.apple.com/cn/app/enjoy-%E7%B2%BE%E9%80%89%E7%BE%8E%E9%A3%9F%E7%94%B5%E5%95%86/id943837902?mt=8\n• SwiftGG 翻译组官网：https://swift.gg/\n• SwiftGG 翻译组微博：@SwiftGG翻译组（https://www.weibo.com/swiftguide）\n• Swift 官方开源项目地址：https://github.com/apple/swift\n• 星星给 Swift 提交的 Pull Request：https://github.com/apple/swift/pull/770\n• IBM Swift Sandbox 在 2018 年 1 月已经关闭，官方解释说要专注在 Swift 服务端开发\n• Objective-C Block 用法说明网页：http://t.cn/z8iOhFs\n• 喵神的微博：@onevcat（https://www.weibo.com/onevcat）\n• 喵神的博客：https://onevcat.com/\n• 王雷的邮箱：r4ynum1@gmail.com\n• 莲叔的微博：@aaaron7_ （https://weibo.com/aaaron7）\n• 羊叔的微博：@shanksyang（https://weibo.com/shanksyang0）\n• 梁杰的微博：@梁杰_numbbbbb（https://www.weibo.com/numbbbbb）\n\n时间线：\n• 02:00  个人介绍\n• 03:16  主题介绍\n• 06:37  Swift 发布当天的回忆\n• 13:00  Swift 官方文档翻译\n• 19:23  Enjoy 的技术选型，为何决定使用 Swift\n• 21:22  Swift Playground 介绍\n• 27:54  各种 Swift 论坛和公司内部培训\n• 33:00  Enjoy Swift 踩坑\n• 38:13  Swift 8MB 包体积问题，不同版本编译的 framework 不通用问题\n• 40:56  2014 年大家的补充内容\n• 42:50  2015 年 Enjoy 的 Swift 使用体验\n• 45:35  SwiftGG 翻译成立！\n• 48:04  Swift 开源的介绍和解析，神秘嘉宾喵神出场！\n• 54:26  星星给 Swift 项目提交的 PR 被合并\n• 57:58  2015 年大家的补充内容\n            </description>\n            <enclosure url=\"https://talkcdn.swift.gg/audio/6.mp3\" length=\"62420451\" type=\"audio/mpeg\" />\n            <guid>https://talkcdn.swift.gg/audio/6.mp3</guid>\n            <itunes:duration>01:05:01</itunes:duration>\n            <itunes:summary>\n从 2014 年到现在，Swift 发布已经超过四年。从 Swift 文档翻译开始，我们翻译组也一路参与 Swift 的发展过程，做了很多有意思的事。Swift 5 预计会在 2019 发布，届时 ABI 将会稳定，开发者一直盼望的黎明即将到来。黎明前夕，我们想回忆一下过去，说说这四年发生过什么。\n\n这期节目我们请到了老朋友莲叔和星星，还在青总的帮助下请到了 Enjoy 团队的王雷，四个人站在四个不同的角度，聊聊我们的回忆和思考。（本期还有一段彩蛋，来自喵神的 Swift 开源解读！）\n\n如果你一直在关注 Swift，可以和我们一起来回忆过去；如果你是新入行或者新转行的 iOS 开发者，那本期节目可以让你更加深入的了解 Swift。总之，听就对了。\n\n哦对了，如果你觉得这期节目有价值，别忘了分享给你的朋友。\n\n参考链接：\n• 垃圾桶里的 OC 教程：https://img.25pp.com/uploadfile/news/2014/0604/20140604031716756_380x480.jpg\n• 《The Swift Programming Language》中文版项目地址：https://github.com/SwiftGGTeam/the-swift-programming-language-in-chinese\n• Swift 中文文档正式发布的那条微博：https://weibo.com/5174822990/B8CqZ7ox0?refer_flag=1001030103_\n• 苹果官方 Swift 首页：https://swift.org/\n• Enjoy App：https://itunes.apple.com/cn/app/enjoy-%E7%B2%BE%E9%80%89%E7%BE%8E%E9%A3%9F%E7%94%B5%E5%95%86/id943837902?mt=8\n• SwiftGG 翻译组官网：https://swift.gg/\n• SwiftGG 翻译组微博：@SwiftGG翻译组（https://www.weibo.com/swiftguide）\n• Swift 官方开源项目地址：https://github.com/apple/swift\n• 星星给 Swift 提交的 Pull Request：https://github.com/apple/swift/pull/770\n• IBM Swift Sandbox 在 2018 年 1 月已经关闭，官方解释说要专注在 Swift 服务端开发\n• Objective-C Block 用法说明网页：http://t.cn/z8iOhFs\n• 喵神的微博：@onevcat（https://www.weibo.com/onevcat）\n• 喵神的博客：https://onevcat.com/\n• 王雷的邮箱：r4ynum1@gmail.com\n• 莲叔的微博：@aaaron7_ （https://weibo.com/aaaron7）\n• 羊叔的微博：@shanksyang（https://weibo.com/shanksyang0）\n• 梁杰的微博：@梁杰_numbbbbb（https://www.weibo.com/numbbbbb）\n\n时间线：\n• 02:00  个人介绍\n• 03:16  主题介绍\n• 06:37  Swift 发布当天的回忆\n• 13:00  Swift 官方文档翻译\n• 19:23  Enjoy 的技术选型，为何决定使用 Swift\n• 21:22  Swift Playground 介绍\n• 27:54  各种 Swift 论坛和公司内部培训\n• 33:00  Enjoy Swift 踩坑\n• 38:13  Swift 8MB 包体积问题，不同版本编译的 framework 不通用问题\n• 40:56  2014 年大家的补充内容\n• 42:50  2015 年 Enjoy 的 Swift 使用体验\n• 45:35  SwiftGG 翻译成立！\n• 48:04  Swift 开源的介绍和解析，神秘嘉宾喵神出场！\n• 54:26  星星给 Swift 项目提交的 PR 被合并\n• 57:58  2015 年大家的补充内容\n            </itunes:summary>\n            <itunes:image href=\"https://talk.swift.gg/static/logo.jpg\"/>\n            <itunes:keywords>程序员,开发,开发者,swift,swiftgg,翻译组,技术</itunes:keywords>\n          <itunes:explicit>no</itunes:explicit>\n        </item>\n        <item>\n            <title>聊聊 Swift 这四年（下）</title>\n            <link>https://talk.swift.gg</link>\n            <pubDate>Tue, 04 Dec 2018 08:00:00 CDT</pubDate>\n            <description>\n从 2014 年到现在，Swift 发布已经超过四年。从 Swift 文档翻译开始，我们翻译组也一路参与 Swift 的发展过程，做了很多有意思的事。Swift 5 预计会在 2019 发布，届时 ABI 将会稳定，开发者一直盼望的黎明即将到来。黎明前夕，我们想回忆一下过去，说说这四年发生过什么。\n\n这期节目我们请到了老朋友莲叔和星星，还在青总的帮助下请到了 Enjoy 团队的王雷，四个人站在四个不同的角度，聊聊我们的回忆和思考。\n\n如果你一直在关注 Swift，可以和我们一起来回忆过去；如果你是新入行或者新转行的 iOS 开发者，那本期节目可以让你更加深入的了解 Swift。总之，听就对了。\n\n哦对了，如果你觉得这期节目有价值，别忘了分享给你的朋友。\n\n参考链接：\n• iOS 循环表情图：http://ww1.sinaimg.cn/large/0065hPzhgy1fdfv4njndtj30u00pmtar.jpg\n• 腾讯 OCS 现存的文章：http://www.10tiao.com/html/330/201612/2653578416/1.html\n• DynamicCocoa 的 issue 列表：https://github.com/DynamicCocoa/DynamicCocoa/issues\n• bang 对于 JSPatch 苹果警告的回应：https://blog.cnbang.net/internet/3374/\n• Swift 项目官方地址：https://github.com/apple/swift-evolution\n• SwiftGG 翻译组官网：https://swift.gg/\n• SwiftGG 翻译组微博：@SwiftGG翻译组（https://www.weibo.com/swiftguide）\n• 王雷的邮箱：r4ynum1@gmail.com（想去 Enjoy 工作可以直接发送简历）\n• 莲叔的微博：@aaaron7_ （https://weibo.com/aaaron7）\n• 羊叔的微博：@shanksyang（https://weibo.com/shanksyang0）\n• 梁杰的微博：@梁杰_numbbbbb（https://www.weibo.com/numbbbbb）\n\n时间线：\n• 01:24  Swift 3.0\n• 02:36  Swift ABI 稳定的讨论\n• 08:00  第一届 @Swift 开发者大会\n• 09:00  2016 年的 iOS 培训热潮\n• 17:24  混编方案的介绍\n• 23:00  Swift 4.0\n• 24:30  第二届 @Swift 开发者大会\n• 25:40  小程序和跨平台\n• 32:00  影响深远的 JSPatch 事件\n• 39:40  Swift 5\n• 42:38  第三届 @Swift 开发者大会\n• 47:00  回顾和总结\n            </description>\n            <enclosure url=\"https://talkcdn.swift.gg/audio/7.mp3\" length=\"51791749\" type=\"audio/mpeg\" />\n            <guid>https://talkcdn.swift.gg/audio/7.mp3</guid>\n            <itunes:duration>53:57</itunes:duration>\n            <itunes:summary>\n从 2014 年到现在，Swift 发布已经超过四年。从 Swift 文档翻译开始，我们翻译组也一路参与 Swift 的发展过程，做了很多有意思的事。Swift 5 预计会在 2019 发布，届时 ABI 将会稳定，开发者一直盼望的黎明即将到来。黎明前夕，我们想回忆一下过去，说说这四年发生过什么。\n\n这期节目我们请到了老朋友莲叔和星星，还在青总的帮助下请到了 Enjoy 团队的王雷，四个人站在四个不同的角度，聊聊我们的回忆和思考。（本期还有一段彩蛋，来自喵神的 Swift 开源解读！）\n\n如果你一直在关注 Swift，可以和我们一起来回忆过去；如果你是新入行或者新转行的 iOS 开发者，那本期节目可以让你更加深入的了解 Swift。总之，听就对了。\n\n哦对了，如果你觉得这期节目有价值，别忘了分享给你的朋友。\n\n参考链接：\n• iOS 循环表情图：http://ww1.sinaimg.cn/large/0065hPzhgy1fdfv4njndtj30u00pmtar.jpg\n• 腾讯 OCS 现存的文章：http://www.10tiao.com/html/330/201612/2653578416/1.html\n• DynamicCocoa 的 issue 列表：https://github.com/DynamicCocoa/DynamicCocoa/issues\n• bang 对于 JSPatch 苹果警告的回应：https://blog.cnbang.net/internet/3374/\n• Swift 项目官方地址：https://github.com/apple/swift-evolution\n• SwiftGG 翻译组官网：https://swift.gg/\n• SwiftGG 翻译组微博：@SwiftGG翻译组（https://www.weibo.com/swiftguide）\n• 王雷的邮箱：r4ynum1@gmail.com（想去 Enjoy 工作可以直接发送简历）\n• 莲叔的微博：@aaaron7_ （https://weibo.com/aaaron7）\n• 羊叔的微博：@shanksyang（https://weibo.com/shanksyang0）\n• 梁杰的微博：@梁杰_numbbbbb（https://www.weibo.com/numbbbbb）\n\n时间线：\n• 01:24  Swift 3.0\n• 02:36  Swift ABI 稳定的讨论\n• 08:00  第一届 @Swift 开发者大会\n• 09:00  2016 年的 iOS 培训热潮\n• 17:24  混编方案的介绍\n• 23:00  Swift 4.0\n• 24:30  第二届 @Swift 开发者大会\n• 25:40  小程序和跨平台\n• 32:00  影响深远的 JSPatch 事件\n• 39:40  Swift 5\n• 42:38  第三届 @Swift 开发者大会\n• 47:00  回顾和总结\n            </itunes:summary>\n            <itunes:image href=\"https://talk.swift.gg/static/logo.jpg\"/>\n            <itunes:keywords>程序员,开发,开发者,swift,swiftgg,翻译组,技术</itunes:keywords>\n          <itunes:explicit>no</itunes:explicit>\n        </item>\n    </channel>\n</rss>\n`","import React, { Component } from 'react';\nimport './Main.css';\nimport NavBar from './NavBar'\nimport { Container, Row, Col } from 'reactstrap'\nimport { Link } from 'react-router-dom'\nimport BtnBar from './BtnBar'\nimport rss from '../rss.js'\n\nconst xml = require('xml-js')\nconst rssContent = xml.xml2js(rss, {compact: true})\nvar episodes = rssContent.rss.channel.item\nif (!Array.isArray(episodes)) episodes = [episodes]\n\nclass Main extends Component {\n  formatDate = (date) => {\n    var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [year, month, day].join('-');\n  }\n\n  render() {\n    return (\n      <Container fluid className='main'>\n        <Row>\n          <NavBar />\n        </Row>\n        <Row>\n          <Col className='screen'>\n            <div className='title'>ggtalk</div>  \n            <div className='intro'>程序员的闲聊节目</div>\n          </Col>\n        </Row>\n        <BtnBar />\n        <Row className='desc'>\n          <Col className='center' xs={12} sm={10} md={8} lg={6}>\n            <div className='subtitle'>\n              简介\n            </div>\n            <div className='description'>\n              接地气、有价值的闲聊节目。一帮程序员，在无尽的接需求写代码改 bug 加班上线循环中开辟出来的一块空地，想想过去，聊聊现在，偶尔也展望一下未来。\n              <br /><br />\n              头发越来越少，经验越来越多；颈椎开始僵硬，头脑依然灵活。代码写多了就想尝试点新东西，聊技术，聊工作，聊生活。挤地铁？又堵车？随便点一期吧，听个乐呵。\n              <br /><br />\n              我们的网站：<a target='_blank' rel=\"noopener noreferrer\" href='https://swift.gg'>https://swift.gg</a>，我们的微博 <a target='_blank' rel=\"noopener noreferrer\" href='https://www.weibo.com/swiftguide'>@SwiftGG翻译组</a>，我的微博 <a target='_blank' rel=\"noopener noreferrer\" href='https://www.weibo.com/numbbbbb'>@梁杰_numbbbbb</a>，我的邮箱：numbbbbb@swift.gg。\n            </div>\n          </Col>\n        </Row>\n        <Row className='episodes'>\n          <Col className='center' xs={12} sm={10} md={8} lg={6}>\n            <div className='subtitle'>\n              节目列表\n            </div>\n            {episodes.map((episode, i) => {\n              return (\n                <Row className='episode' key={i}>\n                  <Col>\n                    <Link target='_blank' className='title' to={'/' + i}>{episode.title._text}</Link>\n                    <div className='intro'>\n                      发布日期：{this.formatDate(episode.pubDate._text)}&nbsp;|&nbsp;长度：{episode['itunes:duration']._text}\n                    </div>\n                    <div className='description'>\n                      {episode['itunes:summary']._text.split('\\n')[1]}\n                    </div>\n                  </Col>\n                </Row>\n              )\n            }).reverse()}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport './Episode.css';\nimport NavBar from './NavBar'\nimport { Container, Row, Col } from 'reactstrap'\nimport MediaElement from './MediaElement'\nimport BtnBar from './BtnBar'\nimport rss from '../rss.js'\nvar Autolinker = require( 'autolinker' )\n\nconst xml = require('xml-js')\nconst rssContent = xml.xml2js(rss, {compact: true})\nvar episodes = rssContent.rss.channel.item\nif (!Array.isArray(episodes)) episodes = [episodes]\n\nclass Episode extends Component {\n  componentDidMount () {\n    document.title = 'ggtalk | ' + episodes[this.props.match.params.id].title._text\n  }\n\n  formatDate = (date) => {\n    var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [year, month, day].join('-');\n  }\n\n  render() {\n    let i = this.props.match.params.id\n    let episode = episodes[i]\n\n    return (\n      <div className='episode'>\n        <Container fluid>\n          <Row>\n            <NavBar />\n          </Row>\n          <Row>\n            <Col className='screen'>\n              <div className='title'>{episode.title._text}</div>  \n              <div className='intro'>第 {i} 期&nbsp;·&nbsp;{this.formatDate(episode.pubDate._text)}&nbsp;·&nbsp;{episode['itunes:duration']._text}</div>\n            </Col>\n          </Row>\n          <Row className='audio'>\n            <Col className='center' xs={12} sm={10} md={8} lg={6}>\n              <MediaElement\n                source={episode.guid._text}\n                id='audioplayer'\n                controls\n                width='100%'\n              />\n            </Col>\n          </Row>\n          <BtnBar />\n          <Row className='desc'>\n            <Col className='center' xs={12} sm={10} md={8} lg={6}>\n              <div className='subtitle'>\n                简介\n              </div>\n              <div className='description' dangerouslySetInnerHTML={{ __html: Autolinker.link(episode.description._text).replace(/\\n/g, '<br />')}} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Episode\n","import React, { Component } from 'react';\nimport './About.css';\nimport { Container, Row, Col } from 'reactstrap'\nimport NavBar from './NavBar'\nimport BtnBar from './BtnBar'\n\nclass About extends Component {\n  render() {\n    return (\n      <Container fluid className='about'>\n        <Row>\n          <NavBar />\n        </Row>\n        <Row>\n          <Col className='screen'>\n            <div className='title'>关于我们</div>  \n            <div className='intro'>{'//'} 一个业余项目<del>最重要的部分</del>必须有的部分</div>\n          </Col>\n        </Row>\n        <BtnBar />\n        <Row className='desc'>\n          <Col className='center' xs={12} sm={10} md={8} lg={6}>\n            之后可能会专门写一篇文章或者录一期节目来详细讲讲为什么想做电台，目前来说，先复用一下首页的介绍吧……\n            <br /><br />\n            接地气、有价值的闲聊节目。一帮程序员，在无尽的接需求写代码改 bug 加班上线循环中开辟出来的一块空地，想想过去，聊聊现在，偶尔也展望一下未来。\n            <br /><br />\n            头发越来越少，经验越来越多；颈椎开始僵硬，头脑依然灵活。代码写多了就想尝试点新东西，聊技术，聊工作，聊生活。挤地铁？又堵车？随便点一期吧，听个乐呵。\n            <br /><br />\n            我们的网站：<a target='_blank' rel=\"noopener noreferrer\" href='https://swift.gg'>https://swift.gg</a>，我们的微博<a target='_blank' rel=\"noopener noreferrer\" href='https://www.weibo.com/swiftguide'>@SwiftGG翻译组</a>，我的微博<a target='_blank' rel=\"noopener noreferrer\" href='https://www.weibo.com/numbbbbb'>@梁杰_numbbbbb</a>，我的邮箱：numbbbbb@swift.gg。\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default About\n","import React, { Component } from 'react';\nimport './Android.css';\nimport { Container, Row, Col } from 'reactstrap'\nimport NavBar from './NavBar'\nimport BtnBar from './BtnBar'\n\nclass Android extends Component {\n  render() {\n    return (\n      <Container fluid className='android'>\n        <Row>\n          <NavBar />\n        </Row>\n        <Row>\n          <Col className='screen'>\n            <div className='title'>安卓说明</div>  \n            <div className='intro'><del>建议尽快换 iPhone</del></div>\n          </Col>\n        </Row>\n        <BtnBar />\n        <Row className='desc'>\n          <Col className='center' xs={12} sm={10} md={8} lg={6}>\n            苹果可以使用自带的 Podcasts 应用收听节目，非常方便，没什么好说的。但是安卓的情况比较复杂。\n            <br /><br />\n            Google 官方有一个电台应用，叫 <a target='_blank' rel=\"noopener noreferrer\" href='https://play.google.com/store/apps/details?id=com.google.android.apps.podcasts'>Google Podcasts</a>。不过由于是官方出品，国内可能使用起来并不方便。一般来说，还是要选择第三方应用收听节目。\n            <br /><br />\n            安卓平台的第三方电台类应用不少，但是目前似乎还没有出现一个公认的最强者，每个都有好有坏。我整理了一下比较出名的应用，大家可以自行搜索使用：\n            <br />\n            &nbsp;· Pocket Casts\n            <br />\n            &nbsp;· PlayerFM\n            <br />\n            &nbsp;· CastBox\n            <br />\n            &nbsp;· Audvel\n            <br />\n            <br />\n            一般来说，这类电台应用都可以通过 RSS 地址来订阅电台，我们的 RSS 地址是：<a target='_blank' rel=\"noopener noreferrer\" href='https://talk.swift.gg/static/rss.xml'>https://talk.swift.gg/static/rss.xml</a>，你可以自行复制订阅。\n            <br />\n            <br />\n            如果你不太清楚如何设置，或者不想使用第三方应用，也可以直接在我们的网页中播放。在节目列表中点击标题，打开的详情页里有播放按钮。\n            <br />\n            <br />\n            我自己很少使用安卓，很难对这些应用进行比较。大家在使用过程中如果发现好用的应用请告诉我，我会更新到这里。\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Android\n","import React, { Component } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport Main from './components/Main'\nimport Episode from './components/Episode'\nimport About from './components/About'\nimport Android from './components/Android'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path='/about' component={About} />\n          <Route path='/android' component={Android} />\n          <Route path='/:id' component={Episode} />\n          <Route path='/' component={Main} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}