{"version":3,"sources":["components/MediaElement.js","components/NavBar.js","components/BtnBar.js","components/Main.js","components/Episode.js","components/About.js","components/Android.js","App.js","serviceWorker.js","index.js"],"names":["MediaElement","props","this","mediaBody","source","mediaHtml","concat","id","width","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","dangerouslySetInnerHTML","__html","MediaElementPlayer","global","player","console","log","remove","Component","NavBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","className","reactstrap_es","color","light","expand","href","onClick","navbar","target","BtnBar","sm","md","size","offset","lg","rel","outline","Main","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","episodes","_this2","xml","require","fetch","then","data","text","rssContent","xml2js","compact","rss","channel","item","Array","isArray","_this3","fluid","src_components_NavBar","src_components_BtnBar","xs","map","episode","i","key","Link","to","title","_text","pubDate","split","reverse","Autolinker","Episode","document","match","params","guid","controls","link","description","replace","About","Android","App","BrowserRouter","Switch","Route","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0169f9a8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'mediaelement';\n\n// Import stylesheet and shims\nimport 'mediaelement/build/mediaelementplayer.min.css';\nimport 'mediaelement/build/mediaelement-flash-video.swf';\n\nexport default class MediaElement extends Component {\n  render() {\n    const props = this.props\n\n    const\n      mediaBody = props.source,\n      mediaHtml = `<audio id=\"${props.id}\" width=\"${props.width}\" controls src=\"${mediaBody}\" />` ;\n\n    return (<div dangerouslySetInnerHTML={{__html: mediaHtml}}></div>);\n\n  }\n\n  componentDidMount() {\n\n    const {MediaElementPlayer} = global;\n    if (!MediaElementPlayer) {\n      return;\n    }\n\n\n    this.player = new MediaElementPlayer(this.props.id)\n    console.log(this.player)\n  }\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.remove();\n      this.player = null\n    }\n  }\n}","import React, { Component } from 'react';\nimport './NavBar.css';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from 'reactstrap';\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <div className='nav-bar'>\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand href=\"/\">ggtalk</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink href=\"/\">节目列表</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink target='_blank' href=\"https://swift.gg\">Swift GG 网站</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink target='_blank' href=\"https://www.weibo.com/swiftguide\">Swift GG 微博</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink target='_blank' href=\"https://github.com/SwiftGGTeam/ggtalk\">GitHub</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/android\">安卓说明</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/about\">关于</NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default NavBar\n","import React, { Component } from 'react';\nimport {\nRow, Col, Button\n} from 'reactstrap';\nimport './BtnBar.css'\n\nclass BtnBar extends Component {\n  render() {\n    return (\n      <Row className='btns'>\n        <Col sm={12} md={{size:10, offset: 1}} lg={{size:8, offset: 2}}>\n          <Row>\n            <Col sm={2}>\n              <a target='_blank' rel=\"noopener noreferrer\" href='https://talk.swift.gg/static/rss.xml'>\n                <Button outline color=\"secondary\">RSS</Button>\n              </a>\n            </Col>\n            <Col sm={4}>\n              <a target='_blank' rel=\"noopener noreferrer\" href='https://itunes.apple.com/cn/podcast/ggtalk/id1440443653'>\n                <Button outline color=\"secondary\">苹果 Podcasts</Button>\n              </a>\n            </Col>\n            <Col sm={4}>\n              <a target='_blank' rel=\"noopener noreferrer\" href='https://playmusic.app.goo.gl/?ibi=com.google.PlayMusic&isi=691797987&ius=googleplaymusic&apn=com.google.android.music&link=https://play.google.com/music/m/Iprya7mjh2hcu4stmptywzvkxv4?t%3Dggtalk%26pcampaignid%3DMKT-na-all-co-pr-mu-pod-16'>\n                <Button outline color=\"secondary\">Google Podcasts</Button>\n              </a>\n            </Col>\n            <Col sm={2}>\n              <a target='_blank' rel=\"noopener noreferrer\" href='/android'>\n                <Button outline color=\"secondary\">安卓</Button>\n              </a>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default BtnBar\n","import React, { Component } from 'react';\nimport './Main.css';\nimport NavBar from './NavBar'\nimport { Container, Row, Col } from 'reactstrap'\nimport { Link } from 'react-router-dom'\nimport BtnBar from './BtnBar'\n\nclass Main extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      episodes: []\n    }\n  }\n\n  componentDidMount() {\n    const xml = require('xml-js')\n    var episodes = []\n\n    fetch('/static/rss.xml').then((data) => data.text()).then((text) => {\n      const rssContent = xml.xml2js(text, {compact: true})\n      episodes = rssContent.rss.channel.item\n      if (!Array.isArray(episodes)) episodes = [episodes]\n      this.setState({episodes})\n    })\n  }\n\n  formatDate = (date) => {\n    var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [year, month, day].join('-');\n  }\n\n  render() {\n    return (\n      <Container fluid className='main'>\n        <Row>\n          <NavBar />\n        </Row>\n        <Row>\n          <Col className='screen'>\n            <div className='title'>ggtalk</div>  \n            <div className='intro'>程序员的闲聊节目</div>\n          </Col>\n        </Row>\n        <BtnBar />\n        <Row className='desc'>\n          <Col className='center' xs={12} sm={10} md={8} lg={6}>\n            <div className='subtitle'>\n              简介\n            </div>\n            <div className='description'>\n              接地气、有价值的闲聊节目。一帮程序员，在无尽的接需求写代码改 bug 加班上线循环中开辟出来的一块空地，想想过去，聊聊现在，偶尔也展望一下未来。\n              <br /><br />\n              头发越来越少，经验越来越多；颈椎开始僵硬，头脑依然灵活。代码写多了就想尝试点新东西，聊技术，聊工作，聊生活。挤地铁？又堵车？随便点一期吧，听个乐呵。\n              <br /><br />\n              我们的网站：<a target='_blank' rel=\"noopener noreferrer\" href='https://swift.gg'>https://swift.gg</a>，我们的微博 <a target='_blank' rel=\"noopener noreferrer\" href='https://www.weibo.com/swiftguide'>@SwiftGG翻译组</a>，我的微博 <a target='_blank' rel=\"noopener noreferrer\" href='https://www.weibo.com/numbbbbb'>@梁杰_numbbbbb</a>，我的邮箱：numbbbbb@swift.gg。\n            </div>\n          </Col>\n        </Row>\n        <Row className='episodes'>\n          <Col className='center' xs={12} sm={10} md={8} lg={6}>\n            <div className='subtitle'>\n              节目列表\n            </div>\n            {this.state.episodes.map((episode, i) => {\n              return (\n                <Row className='episode' key={i}>\n                  <Col>\n                    <Link target='_blank' className='title' to={'/' + i}>{episode.title._text}</Link>\n                    <div className='intro'>\n                      发布日期：{this.formatDate(episode.pubDate._text)}&nbsp;|&nbsp;长度：{episode['itunes:duration']._text}\n                    </div>\n                    <div className='description'>\n                      {episode['itunes:summary']._text.split('\\n')[1]}\n                    </div>\n                  </Col>\n                </Row>\n              )\n            }).reverse()}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Main\n","import React, { Component } from 'react';\nimport './Episode.css';\nimport NavBar from './NavBar'\nimport { Container, Row, Col } from 'reactstrap'\nimport MediaElement from './MediaElement'\nimport BtnBar from './BtnBar'\nvar Autolinker = require( 'autolinker' )\n\nclass Episode extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      episodes: []\n    }\n  }\n\n  componentDidMount () {\n    const xml = require('xml-js')\n    var episodes = []\n\n    fetch('/static/rss.xml').then((data) => data.text()).then((text) => {\n      const rssContent = xml.xml2js(text, {compact: true})\n      episodes = rssContent.rss.channel.item\n      if (!Array.isArray(episodes)) episodes = [episodes]\n      this.setState({episodes})\n      document.title = 'ggtalk | ' + episodes[this.props.match.params.id].title._text\n    })\n  }\n\n  formatDate = (date) => {\n    var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [year, month, day].join('-');\n  }\n\n  render() {\n    if (this.state.episodes.length === 0) {\n      return null\n    }\n\n    let i = this.props.match.params.id\n    let episode = this.state.episodes[i]\n\n    return (\n      <div className='episode'>\n        <Container fluid>\n          <Row>\n            <NavBar />\n          </Row>\n          <Row>\n            <Col className='screen'>\n              <div className='title'>{episode.title._text}</div>  \n              <div className='intro'>第 {i} 期&nbsp;·&nbsp;{this.formatDate(episode.pubDate._text)}&nbsp;·&nbsp;{episode['itunes:duration']._text}</div>\n            </Col>\n          </Row>\n          <Row className='audio'>\n            <Col className='center' xs={12} sm={10} md={8} lg={6}>\n              <MediaElement\n                source={episode.guid._text}\n                id='audioplayer'\n                controls\n                width='100%'\n              />\n            </Col>\n          </Row>\n          <BtnBar />\n          <Row className='desc'>\n            <Col className='center' xs={12} sm={10} md={8} lg={6}>\n              <div className='subtitle'>\n                简介\n              </div>\n              <div className='description' dangerouslySetInnerHTML={{ __html: Autolinker.link(episode.description._text).replace(/\\n/g, '<br />')}} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Episode\n","import React, { Component } from 'react';\nimport './About.css';\nimport { Container, Row, Col } from 'reactstrap'\nimport NavBar from './NavBar'\nimport BtnBar from './BtnBar'\n\nclass About extends Component {\n  render() {\n    return (\n      <Container fluid className='about'>\n        <Row>\n          <NavBar />\n        </Row>\n        <Row>\n          <Col className='screen'>\n            <div className='title'>关于我们</div>  \n            <div className='intro'>{'//'} 一个业余项目<del>最重要的部分</del>必须有的部分</div>\n          </Col>\n        </Row>\n        <BtnBar />\n        <Row className='desc'>\n          <Col className='center' xs={12} sm={10} md={8} lg={6}>\n            之后可能会专门写一篇文章或者录一期节目来详细讲讲为什么想做电台，目前来说，先复用一下首页的介绍吧……\n            <br /><br />\n            接地气、有价值的闲聊节目。一帮程序员，在无尽的接需求写代码改 bug 加班上线循环中开辟出来的一块空地，想想过去，聊聊现在，偶尔也展望一下未来。\n            <br /><br />\n            头发越来越少，经验越来越多；颈椎开始僵硬，头脑依然灵活。代码写多了就想尝试点新东西，聊技术，聊工作，聊生活。挤地铁？又堵车？随便点一期吧，听个乐呵。\n            <br /><br />\n            我们的网站：<a target='_blank' rel=\"noopener noreferrer\" href='https://swift.gg'>https://swift.gg</a>，我们的微博<a target='_blank' rel=\"noopener noreferrer\" href='https://www.weibo.com/swiftguide'>@SwiftGG翻译组</a>，我的微博<a target='_blank' rel=\"noopener noreferrer\" href='https://www.weibo.com/numbbbbb'>@梁杰_numbbbbb</a>，我的邮箱：numbbbbb@swift.gg。\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default About\n","import React, { Component } from 'react';\nimport './Android.css';\nimport { Container, Row, Col } from 'reactstrap'\nimport NavBar from './NavBar'\nimport BtnBar from './BtnBar'\n\nclass Android extends Component {\n  render() {\n    return (\n      <Container fluid className='android'>\n        <Row>\n          <NavBar />\n        </Row>\n        <Row>\n          <Col className='screen'>\n            <div className='title'>安卓说明</div>  \n            <div className='intro'><del>建议尽快换 iPhone</del></div>\n          </Col>\n        </Row>\n        <BtnBar />\n        <Row className='desc'>\n          <Col className='center' xs={12} sm={10} md={8} lg={6}>\n            苹果可以使用自带的 Podcasts 应用收听节目，非常方便，没什么好说的。但是安卓的情况比较复杂。\n            <br /><br />\n            Google 官方有一个电台应用，叫 <a target='_blank' rel=\"noopener noreferrer\" href='https://play.google.com/store/apps/details?id=com.google.android.apps.podcasts'>Google Podcasts</a>。不过由于是官方出品，国内可能使用起来并不方便。一般来说，还是要选择第三方应用收听节目。\n            <br /><br />\n            安卓平台的第三方电台类应用不少，但是目前似乎还没有出现一个公认的最强者，每个都有好有坏。我整理了一下比较出名的应用，大家可以自行搜索使用：\n            <br />\n            &nbsp;· Pocket Casts\n            <br />\n            &nbsp;· PlayerFM\n            <br />\n            &nbsp;· CastBox\n            <br />\n            &nbsp;· Audvel\n            <br />\n            <br />\n            一般来说，这类电台应用都可以通过 RSS 地址来订阅电台，我们的 RSS 地址是：<a target='_blank' rel=\"noopener noreferrer\" href='https://talk.swift.gg/static/rss.xml'>https://talk.swift.gg/static/rss.xml</a>，你可以自行复制订阅。\n            <br />\n            <br />\n            如果你不太清楚如何设置，或者不想使用第三方应用，也可以直接在我们的网页中播放。在节目列表中点击标题，打开的详情页里有播放按钮。\n            <br />\n            <br />\n            我自己很少使用安卓，很难对这些应用进行比较。大家在使用过程中如果发现好用的应用请告诉我，我会更新到这里。\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Android\n","import React, { Component } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport Main from './components/Main'\nimport Episode from './components/Episode'\nimport About from './components/About'\nimport Android from './components/Android'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path='/about' component={About} />\n          <Route path='/android' component={Android} />\n          <Route path='/:id' component={Episode} />\n          <Route path='/' component={Main} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}